// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// my_function_A_cpp
double my_function_A_cpp(NumericVector x);
RcppExport SEXP _DATA5012025Assignment1Q2_my_function_A_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_function_A_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// my_function_B_cpp
double my_function_B_cpp(NumericVector x);
RcppExport SEXP _DATA5012025Assignment1Q2_my_function_B_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_function_B_cpp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DATA5012025Assignment1Q2_my_function_A_cpp", (DL_FUNC) &_DATA5012025Assignment1Q2_my_function_A_cpp, 1},
    {"_DATA5012025Assignment1Q2_my_function_B_cpp", (DL_FUNC) &_DATA5012025Assignment1Q2_my_function_B_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_DATA5012025Assignment1Q2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
